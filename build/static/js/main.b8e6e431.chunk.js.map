{"version":3,"sources":["api/index.js","components/AccountForm.js","components/SinglePost.js","components/Posts.js","components/NewPostForm.js","components/Nav.js","components/Profile.js","index.js"],"names":["API_URL","BASE_URL","callApi","a","url","method","token","body","console","log","options","toUpperCase","headers","JSON","stringify","fetch","response","json","data","error","API_ROOT","AccountForm","action","setToken","setUserData","useState","username","setUsername","password","setPassword","isLogin","title","history","useHistory","handleSubmit","event","preventDefault","user","localStorage","setItem","push","id","className","onSubmit","type","placeholder","value","onChange","target","SinglePost","posts","postId","useParams","post","find","_id","content","setContent","handleMessage","message","author","location","price","willDeliver","to","onClick","Posts","setPosts","userData","searchTerm","setSearchTerm","postsToDisplay","filter","searchTermLower","toLowerCase","toMatch","description","i","length","includes","postMatches","remainingPosts","map","style","border","NewPostForm","newPost","setNewPost","isEdit","filteredPosts","handlePostFieldChange","property","checked","Nav","isLoggedIn","setIsLoggedIn","useEffect","getItem","removeItem","Profile","messages","fromUser","App","fetchUserData","fetchPosts","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8e6e431.chunk.js","sourcesContent":["export const BASE_URL = \"https://strangers-things.herokuapp.com/api/\";\nexport const COHORT_NAME = \"2108-LSU-RM-WEB-PT\";\nexport const API_URL = BASE_URL + COHORT_NAME;\n\nexport const callApi = async ({ url, method, token, body }) => {\n  console.log(\"callApi: \", { url, method, token, body });\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n    if (token) {\n      options.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    console.log(\"Call API Request URL: \", API_URL + url);\n    console.log(\"Call API Options: \", options);\n    const response = await fetch(API_URL + url, options);\n    const data = await response.json();\n    console.log(\"data: \", data);\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error(\"ERROR: \", error);\n  }\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { callApi } from \"../api\";\n\nconst API_ROOT = `https://strangers-things.herokuapp.com/api/2108-LSU-RM-WEB-PT/users/`;\nconst API_REGISTER = `${API_ROOT}register`;\nconst API_LOGIN = `${API_ROOT}login`;\nconst API_USER = `${API_ROOT}me`;\n\nconst AccountForm = ({ action, setToken, setUserData }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const isLogin = action === \"login\";\n  const title = isLogin ? \"Login\" : \"Register\";\n  const oppositeTitle = isLogin ? \"Register\" : \"Login\";\n  const oppositeAction = isLogin ? \"register\" : \"login\";\n  const actionURL = isLogin ? API_LOGIN : API_REGISTER;\n  const history = useHistory();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = await callApi({\n      url: `/users/${action}`,\n      body: { user: { username, password } },\n      method: \"POST\",\n    });\n    const token = data?.data?.token;\n    if (token) {\n      localStorage.setItem(\"token\", token);\n      setUsername(\"\");\n      setPassword(\"\");\n      setToken(token);\n      history.push(\"/\");\n    }\n  };\n  return (\n    <div id=\"register-fields\">\n      <h4 className=\"page-title\">{title}</h4>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AccountForm;\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { callApi } from \"../api\";\n\nconst SinglePost = ({ posts, token }) => {\n  const { postId } = useParams();\n  const post = posts.find((post) => postId === post._id);\n  const [content, setContent] = useState(\"\");\n\n  const handleMessage = async (event) => {\n    const API_URL = `/posts/${postId}/messages`;\n    event.preventDefault();\n    try {\n      await callApi({\n        url: API_URL,\n        method: \"post\",\n        token: token,\n        body: {\n          message: {\n            content: content,\n          },\n        },\n      });\n      console.log(\"DONE!\");\n    } catch (error) {\n      console.error(\"Error sending a message\");\n    }\n  };\n  return (\n    <div id=\"single-post\">\n      {post ? (\n        <div className=\"post-info\">\n          <h3 className=\"post-title\">{post.title}</h3>\n          <button>Message Seller</button>\n          <p id=\"seller\">Seller: {post.author.username}</p>\n          <p className=\"location\">Location: {post.location}</p>\n          <p className=\"description\">Price: {post.price}</p>\n          <p>Delivers: {post.willDeliver ? \"Yes\" : \"No\"}</p>\n          <Link to=\"/posts/{post._id}/edit\">Edit This Post</Link>\n        </div>\n      ) : (\n        \"\"\n      )}\n      <form id=\"message-form\" onSubmit={handleMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          onChange={(event) => {\n            setContent(event.target.value);\n          }}\n          value={content}\n        ></input>\n        <button onClick={handleMessage}>Send Message</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SinglePost;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SinglePost } from \"./SinglePost\";\nimport { callApi } from \"../api\";\n\nconst method = \"DELETE\";\n\nconst postMatches = (post, searchTerm) => {\n  const searchTermLower = searchTerm.toLowerCase();\n  const {\n    description,\n    location,\n    title,\n    author: { username },\n  } = post;\n\n  const toMatch = [description, location, title, username];\n\n  for (let i = 0; i < toMatch.length; i++) {\n    const field = toMatch[i];\n    if (field.toLowerCase().includes(searchTermLower)) {\n      return true;\n    }\n  }\n};\n\nconst Posts = ({ posts, token, setPosts, userData }) => {\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const postsToDisplay = posts.filter((post) => postMatches(post, searchTerm));\n\n  const handleSubmit = async (postId) => {\n    const API_URL = `/posts/${postId}`;\n    event.preventDefault();\n    try {\n      await callApi({\n        url: API_URL,\n        method: method,\n        token: token,\n      });\n      const remainingPosts = posts.filter((post) => post._id !== postId);\n      setPosts(remainingPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <div id=\"posts-nav\">\n        <h2 className=\"page-title\">Posts</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search Posts\"\n          value={searchTerm}\n          onChange={(event) => {\n            setSearchTerm(event.target.value);\n          }}\n        ></input>\n      </div>\n      {postsToDisplay.length ? (\n        postsToDisplay.map((post) => (\n          <div\n            className=\"post-info\"\n            key={post._id}\n            style={{ border: \"2px solid black\" }}\n          >\n            <div id=\"title-button\">\n              <span className=\"post-title\">{post.title}</span>\n              <button onClick={() => history.push(`/posts/${post._id}`)}>\n                Tell me more!\n              </button>\n            </div>\n            <div id=\"seller\">Seller: {post.author.username}</div>\n            <div className=\"location\">Location: {post.location}</div>\n            <div className=\"description\">Description: {post.description}</div>\n\n            {post.author.username === userData.username ? (\n              <button onClick={() => handleSubmit(post._id)}>\n                Delete Post\n              </button>\n            ) : null}\n          </div>\n        ))\n      ) : (\n        <div>\n          <h1>There are no matching posts...</h1>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Posts;\n","import React, { useState } from \"react\";\nimport { callApi } from \"../api\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst NewPostForm = ({ token, setPosts, posts, action }) => {\n  const history = useHistory();\n  const { postId } = useParams();\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    description: \"\",\n    price: \"\",\n    location: \"\",\n    willDeliver: false,\n  });\n  const isEdit = action === \"edit\";\n  const title = isEdit ? \"Edit This Post\" : \"Add a New Post\";\n  const method = isEdit ? \"PATCH\" : \"POST\";\n  const API_URL = isEdit ? `/posts/${postId}` : `/posts`;\n\n  const handleSubmit = async () => {\n    event.preventDefault();\n    try {\n      const {\n        data: { post },\n      } = await callApi({\n        url: API_URL,\n        method: method,\n        body: {\n          post: {\n            title: newPost.title,\n            description: newPost.description,\n            price: newPost.price,\n            location: newPost.location,\n            willDeliver: newPost.willDeliver,\n          },\n        },\n        token,\n      });\n\n      if (isEdit) {\n        //grab existing posts other than the one I'm editing\n        // add in the post i've edited\n        const filteredPosts = posts.filter((post) => post._id !== postId);\n        setPosts([...filteredPosts, post]);\n      } else {\n        //otherwise i am creating a new post, so take my old posts and add this new one to the bottom\n        setPosts([...posts, post]);\n      }\n      //no matter what send users to the /posts page when we are done\n      history.push(\"/posts\");\n    } catch (error) {\n      console.error(\"Error adding your post:\", error);\n    }\n  };\n\n  const handlePostFieldChange = (property) => (event) => {\n    if (property === \"willDeliver\") {\n      setNewPost({ ...newPost, [property]: event.target.checked });\n    } else {\n      setNewPost({ ...newPost, [property]: event.target.value });\n    }\n  };\n\n  return (\n    <>\n      <h2>{title}</h2>\n      <form id=\"new-post-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"What are you selling?\"\n          onChange={handlePostFieldChange(\"title\")}\n          value={newPost.title}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Describe the item (i.e. condition, model)\"\n          onChange={handlePostFieldChange(\"description\")}\n          value={newPost.description}\n        ></input>\n        <input\n          type=\"number\"\n          placeholder=\"What's the price?\"\n          onChange={handlePostFieldChange(\"price\")}\n          value={newPost.price}\n        ></input>\n        <input\n          type=\"text\"\n          placeholder=\"Where is the item located?\"\n          onChange={handlePostFieldChange(\"location\")}\n          value={newPost.location}\n        ></input>\n        <label>\n          Are you willing to deliver?\n          <input\n            type=\"checkbox\"\n            onChange={handlePostFieldChange(\"willDeliver\")}\n            value={newPost.willDeliver}\n          ></input>\n        </label>\n\n        <button>{title}</button>\n      </form>\n    </>\n  );\n};\n\nexport default NewPostForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = ({ token }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, [token]);\n\n  return (\n    <div id=\"nav-bar\">\n      <div id=\"nav-links\">\n        <span>\n          <Link to=\"/posts\">View Posts from Strangers!</Link>\n        </span>\n        <div>\n          {isLoggedIn ? (\n            <div>\n              <span>\n                <Link to=\"/posts/new\">Add a Post</Link>\n              </span>\n              <span>\n                <Link to=\"/profile\">Profile</Link>\n              </span>\n              <span>\n                <Link\n                  to=\"/\"\n                  onClick={() => {\n                    localStorage.removeItem(\"token\");\n                    setIsLoggedIn(false);\n                  }}\n                >\n                  Logout\n                </Link>\n              </span>\n            </div>\n          ) : (\n            <div>\n              <div>\n                <span>\n                  <Link to=\"/login\">Login</Link>\n                </span>\n                <span>\n                  <Link to=\"/register\">Register</Link>\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  console.log(isLoggedIn);\n};\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport { callApi } from \"../api\";\n\nconst Profile = ({ userData, token }) => {\n  const API_URL = `/users/me`;\n  const [profileData, setProfileData] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    setPosts(userData.posts);\n  }, [userData]);\n\n  const handleSubmit = async (postId) => {\n    const API_URL = `/posts/${postId}`;\n    event.preventDefault();\n    try {\n      await callApi({\n        url: API_URL,\n        method: \"delete\",\n        token: token,\n      });\n      const remainingPosts = posts.filter((post) => post._id !== postId);\n      setPosts(remainingPosts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getProfile = async () => {\n    const data = await callApi({\n      url: API_URL,\n      token,\n    });\n\n    setProfileData(data);\n  };\n\n  console.log(\"DATA\", userData);\n  console.log(\"POSTS\", userData.posts);\n  console.log(\"UserData:\", userData);\n\n  return (\n    <div>\n      <h1 className=\"page-title\">\n        This is where your information lives, {userData.username}\n      </h1>\n      <div className=\"profile-body\">\n        {userData.messages && userData.messages.length ? (\n          <div>\n            <div id=\"inbox-span\">\n              <h3 id=\"inbox\">Inbox ({userData.messages.length})</h3>\n\n              {userData.messages.map((message) => {\n                return (\n                  <div id=\"message\" key={message._id}>\n                    <label id=\"sender\">{message.fromUser.username}</label>\n                    <p id=\"message-content\">{message.content}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <h3>There are no messages to display</h3>\n        )}\n        {posts && posts.length ? (\n          <div id=\"user-posts\">\n            <h2>Listings you've created: </h2>\n            {posts.map((post) => {\n              return (\n                <div key={post._id} style={{ border: \"1px solid black\" }}>\n                  <h5>{post.title}</h5>\n                  <div>Posted by: {post.author.username}</div>\n                  <div>Description: {post.description}</div>\n                  <div>Location: {post.location}</div>\n                  <button onClick={() => handleSubmit(post._id)}>\n                    Delete Post\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <h2>You haven't created any posts yet.</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n//messages may need to be converted to a string to parse correctly\n\n//could replace getProfile with a getMessages function\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport {\n  AccountForm,\n  Posts,\n  SinglePost,\n  NewPostForm,\n  Nav,\n  Login,\n  Profile,\n} from \"./components\";\nimport { callApi } from \"./api\";\nimport \"../src/style.css\";\n\nconst App = () => {\n  const [token, setToken] = useState(\"\");\n  const [userData, setUserData] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  const fetchUserData = async (token) => {\n    const { data } = await callApi({\n      url: \"/users/me\",\n      token,\n    });\n    return data;\n  };\n\n  const fetchPosts = async () => {\n    const {\n      data: { posts },\n    } = await callApi({\n      url: \"/posts\",\n    });\n    return posts;\n  };\n\n  useEffect(async () => {\n    // const posts = await fetchPosts();\n    // setPosts(posts);\n    if (!token) {\n      setToken(localStorage.getItem(\"token\"));\n      return;\n    }\n    const data = await fetchUserData(token);\n    if (data && data.username) {\n      setUserData(data);\n    }\n  }, [token]);\n\n  useEffect(async () => {\n    const posts = await fetchPosts();\n    setPosts(posts);\n  }, []);\n\n  return (\n    <>\n      <div id=\"header\">\n        {userData.username && (\n          <p>Welcome back to Stranger's Things {userData.username}</p>\n        )}\n        {!userData.username && <p>Welcome to Stranger's Things</p>}\n      </div>\n      <Nav token={token} />\n\n      <Switch>\n        <Route exact path=\"/\"></Route>\n\n        <Route exact path=\"/posts\">\n          <Posts\n            posts={posts}\n            token={token}\n            setPosts={setPosts}\n            userData={userData}\n          />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile userData={userData} token={token} />\n        </Route>\n        <Route path=\"/posts/new\">\n          <NewPostForm\n            token={token}\n            setPosts={setPosts}\n            posts={posts}\n            action=\"add\"\n          />\n        </Route>\n        <Route path=\"/posts/:postId/edit\">\n          <NewPostForm\n            token={token}\n            setPosts={setPosts}\n            posts={posts}\n            action=\"edit\"\n          />\n        </Route>\n        <Route path=\"/posts/:postId\">\n          <SinglePost posts={posts} token={token} />\n        </Route>\n        <Route path=\"/register\">\n          <AccountForm\n            action=\"register\"\n            setToken={setToken}\n            setUserData={setUserData}\n          />\n        </Route>\n        <Route path=\"/login\">\n          <AccountForm\n            action=\"login\"\n            setToken={setToken}\n            setUserData={setUserData}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}